\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename delicious-el.info
@settitle Emacs Delicious Interface
@documentencoding UTF-8
@c %**end of header

@syncodeindex fn cp
@syncodeindex vr cp

@dircategory Emacs
@direntry
* delicious-el: (delicious-el). Emacs client for Delicious bookmarks API.
@end direntry

@copying
This manual is for delicious-el, version 0.2FIXME.

Copyright @copyright{} 2004, 2005 John Sullivan.
@*
@indent

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License, Version 2.0 or any
later version published by the Free Software Foundation. A copy of the
license is included with this package in the file named ``COPYING''.
@end quotation
@end copying

@titlepage
@title Using delicious-el
@author John Sullivan
@author Štěpán Němec

@c  The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@node Top, Installation, (dir), (dir)
@top delicious-el

This is a set of functions for interacting with
@url{http://www.delicious.com}, a ``social bookmarking'' project
developed by Joshua Shachter.

@noindent
The API documentation is at @url{http://www.delicious.com/help/api}.

@menu
* Installation::                Downloading and installing the libraries
* Usage::                       How to use this package
* Keeping Up::                  Following the development
* Bugs::                        Help make the package better!
* Index::                       Index of concepts, functions and variables

@detailmenu
 --- The Detailed Node Listing ---

Usage

* Commands::                    The actual user interface
* Emacs-w3m integration::       View, export or import bookmarks

Commands

* Manipulating bookmarks::      Creating, deleting and editing
* Searching::                   Displaying a limited set of bookmarks
* Miscellanea::                 You probably won't need this

@end detailmenu
@end menu

@node Installation, Usage, Top, Top
@chapter Installation

After downloading and unpacking the archive or cloning the Git
repository, you should have the following files:

@itemize
@item @file{delicioapi.el}
@item @file{delicious.el}
@item @file{README}
@item @file{COPYING}
@item @file{delicious-el.texi}
@end itemize

@file{delicioapi.el} contains the back-end functions that interact with
the API behind the scenes. We have kept these in a separate file to make
them available for others to use independently from the commands defined
in @file{delicious.el}.

@file{delicious.el} contains the front-end interactive functions and
commands for putting the API functions to productive use via Emacs.

@node Usage, Keeping Up, Installation, Top
@chapter Usage

First, you need to set up an account at Delicious, by visiting
@url{http://www.delicious.com, the site} and following the instructions
there.

Second, load the @code{delicious-el} files. Put them somewhere in your
@code{load-path}, e.g. doing:

@lisp
  (add-to-list 'load-path "/path/to/delicious-el/files")
@end lisp

If you decide you want to have the @code{delicious-el} functions available to
you automatically when you start Emacs, add:

@lisp
  (require 'delicious)
@end lisp

to your init file.

Then, you need to set your Delicious user name. You can do this either
through Customize, with:

  @kbd{M-x customize-group RET delicious RET}

or by evaluating something like the following:

@lisp
  (setq delicious-username "myusername")
@end lisp

Finally, to be able to securely log into your Delicious account, put
something like the below into the file included in the
@code{auth-sources} variable:

@example
machine api.del.icio.us:443 port https login YourUserName password TopSecret
@end example

@menu
* Commands::                    The actual user interface
* Emacs-w3m integration::       View, export or import bookmarks
@end menu

@node Commands, Emacs-w3m integration, Usage, Usage
@section Commands

@menu
* Manipulating bookmarks::      Creating, deleting and editing
* Searching::                   Displaying a limited set of bookmarks
* Miscellanea::                 You probably won't need this
@end menu

@node Manipulating bookmarks, Searching, Commands, Commands
@subsection Manipulating bookmarks

@deffn Command delicious-post

This is the command to post a URL to your del.icio.us account. The first
time you execute this command in an Emacs session, @code{delicious-el}
will fetch from the server the list of tags you've used so far, and a
complete list of all your posts to date. You will then be prompted for
information for the new post. The only required information is the URL
itself and a description. Everything else is optional.

@code{delicious-el} will try to guess the URL that you want to enter. If you
are in a w3m-el buffer, it will suggest the URL of the site you are
looking at. If not, if there is a URL under the cursor, it will suggest
that. If neither of these two things are true, it will scan the current
buffer for a URL. It will suggest the first one that it finds. Next, it
will check the clipboard and see if there is a URL there. If it doesn't
find one, it will just put an @samp{http://} in the input line for you.

URL is a required field. If you try to enter a blank URL, the program will
abort.

When prompted for tags, use commas to separate multiple values. You
have @kbd{TAB} completion available in typical Emacs style, based on
all of the tags you have used in the past plus any suggestions
provided by the API.

@code{delicious-el} will attempt to guess an appropriate description. If
you are in an @code{emacs-w3m} buffer, @code{delicious-el} will suggest
the title of the page being viewed as a description. If you are looking
at an article in Gnus, it will suggest the title of the article as a
description. If you like the suggestion, hit @kbd{RET}. If you don't,
just erase it and type your own.

The server requires some kind of description be entered. If you don't
enter one, the program will abort.

Extended Description is the next field, and it's all up to you. No
guessing attempts are made here.

Next is the Date/Time prompt. If you don't enter anything here, the
current date will be used. If you do want to enter the date, the format
is indicated in the prompt.

Once you enter the Date/Time and hit @kbd{RET}, the URL should be posted to
the server.
@end deffn

@deffn Command delicious-rename-tag

This will prompt you for an old tag and one or more new tags. As usual,
you can use tab completion when entering this information. In fact, the
old tag you enter must match an existing tag. The old tag will be
changed to the new tags for all posts that had the old tag. After the
renaming is done, the local tag list will be refreshed from the server.
@end deffn

@node Searching, Miscellanea, Manipulating bookmarks, Commands
@subsection Searching

All of the search commands described below display their results in a
@samp{*Delicious search results*} buffer. The default is for this buffer
to open in a window other than the active one, or for a second window to
be created if none is available. You can use special key bindings to
navigate the buffer and manipulate the displayed bookmarks. Type
@kbd{C-h b} or @kbd{M-x describe-bindings} to see all possibilities at a
given point in the buffer.

The basic search command is:

@deffn Command delicious-search-posts-regexp

This command will prompt for a regular expression, search all the fields
in all of your posts for matches, and display the matches.
@end deffn

More targeted searching can be achieved by:

@deffn Command delicious-search-description-regexp

This command will prompt for a regular expression, search only the
description field of your posts for matches, and display them.
@end deffn

@deffn Command delicious-search-href-regexp

This command will prompt for a regular expression, search only the
href/link field of your posts, and display the matches.
@end deffn

@deffn Command delicious-search-tags-regexp

This command will prompt for a regular expression, search only the tag
field of your posts, and display the matches. You can specify multiple
tags for search separated by whitespace.

Since tags are the means for organising bookmarks Delicious, we have a
special search function just for them:
@end deffn

@deffn Command delicious-search-tags

This command will prompt you for a comma-separated tag list. You can
use the usual Emacs minibuffer completion facilities based on your
previously used tags. A search will be done for all of the posts that
have all the specified tags. The results will be displayed the same
way as with the other search commands. It is possible to use regular
expression syntax within each tag, as that is the way the match is
determined internally, but you may run into problems with some of the
regexp characters and the completion commands. The order of the tags
is not considered important when determining matches. You do not need
to account for whitespace between tags with this method.
@end deffn

Other search commands include @code{delicious-search-date},
@code{delicious-search-hash} and @code{delicious-search-tags-any}.

@node Miscellanea,  , Searching, Commands
@subsection Miscellanea

@deffn Command delicious-build-posts-list

This command will refresh the local list of your posts from the server.
You shouldn't use this often. The reason posts are cached locally is to
avoid bothering the server too much. There isn't much reason to use this
command, because any posts made during your current session are recorded
locally. But if you suspect that something has gone wrong, you can use
this command to refresh from the server. Or, if you add posts from an
external interface such as your web browser, it could be useful
to refresh the local list.
@end deffn

@deffn Command delicious-build-tags-list

This command will refresh the local list of the tags you have used
from the server. The same caveat about usage frequency applies as with
@code{delicious-build-posts-list}. Any new tags you use while posting
with @code{delicious-post} are added to the completion list, so the
only reason to refresh the list is if something funny happens and the
list gets corrupted, or if you add tags using another interface.
@end deffn


@node Emacs-w3m integration,  , Commands, Usage
@section Emacs-w3m integration

URL and description guessing

The program will use the current page in the w3m buffer if you are using
w3m as a suggestion for the link to post. It will use the current page
name as a suggestion for the description of the link.

@deffn Command delicious-w3m-bookmark-recent

This is an interactive command that will add your Delicious posts to
your w3m bookmarks file. It operates based on recent posts. You tell it
how many posts to scan, what tag (or tag intersection like "foo+bar" to
filter by, and what w3m bookmark section to put the posts in. It will
store the matching posts in that section, without checking for
duplicates or making any effort at syncing (yet). Note that you need
the @file{w3m-bookmarks.el} library to use this feature.
@end deffn

@c FIXME investigate and fix this
@deffn Command delicious-w3m-export

This is an interactive command that will export a w3m bookmark section
to Delicious. You can export one section at a time. When prompted for
the section name, @key{TAB} will complete based on your existing
sections. You can then enter tags just like you do when you post. These
tags will all be assigned to each entry in the w3m section. You must
enter at least one tag. After that, you can enter an optional extended
description and time parameter, which will be attached to all of the
posts from this section. It's very primitive and not 100% reliable at
the moment. It _should_ work as long as the section titles are enclosed
in @verb{|<h2></h2>|}, each bookmark begins with @verb{|<li>|}, and each
bookmark only occupies one line. Future versions may be more flexible in
this regard and will do verification of your posts. You need the
@file{w3m-bookmarks.el} library to use this feature.
@end deffn

@node Keeping Up, Bugs, Usage, Top
@chapter Keeping Up

You can get the development version of this package via Git at
@url{http://gitorious.org/delicious-el}. You can also download the
snapshot tarball from
@url{http://gitorious.org/delicious-el/delicious-el/archive-tarball/dev}.

@node Bugs, Index, Keeping Up, Top
@chapter Bugs

Please report any bugs or suggestions to @email{stepnem@@gmail.com}.

@node Index,  , Bugs, Top
@unnumbered Index

@printindex cp

@bye

FIXME document caching
